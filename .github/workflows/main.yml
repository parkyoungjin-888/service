name: CI/CD

on:
  push:
    branches:
      - main
    paths:
      - '**'

jobs:
  build:
    name: build image
    runs-on: ubuntu-22.04

    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Get changed files
          id: changed-files
          uses: tj-actions/changed-files@v44
  
        - name: List all changed files
          env:
            ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          run: |
            for file in ${ALL_CHANGED_FILES}; do
              echo "$file"
            done

        - name: Initialize IMAGE_LIST
          run: echo "IMAGE_LIST=" >> $GITHUB_ENV

        - name: changed folder docker image build and push
          env:
            ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          run: |
            folders=$(echo "$ALL_CHANGED_FILES" | tr ' ' '\n' | cut -d '/' -f1 | sed '/.github/d' | sort -u)
            BUILDED_IMAGES=()

            for PROJECT_FOLDER in ${folders}; 
            do
                PROJECT_VERSION=$(grep -Po '(?<=version = ")[^"]*' ./"$PROJECT_FOLDER"/pyproject.toml || echo "")
                if [ -n "$PROJECT_VERSION" ]; then
                    echo "$PROJECT_FOLDER:$PROJECT_VERSION"
                    IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/$PROJECT_FOLDER:$PROJECT_VERSION"
                    docker build -t "$IMAGE_NAME" ./"$PROJECT_FOLDER" || true
                    if [ $? -eq 0 ]; then
                        IMAGE_LIST="${IMAGE_LIST} $IMAGE_NAME"
                        echo "image build success : $IMAGE_NAME"
                    fi
                else
                    echo "$PROJECT_FOLDER 폴더의 pyproject.toml 파일이 없거나 버전 정보를 찾을 수 없습니다."
                fi
            done
            echo "IMAGE_LIST=${IMAGE_LIST}" >> $GITHUB_ENV

        - name: Check build images
          run: docker images

        - name: Log in to Docker Hub
          run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

        - name: Docker image push
          run: |
            if [ -z "$IMAGE_LIST" ]; then
              echo "No images, Skipping this step."
              exit 0
            fi
            
            for IMAGE_NAME in $IMAGE_LIST; do
              docker push "$IMAGE_NAME"
              echo "image push success : $IMAGE_NAME"
            done

        - name: checkout k8s-deployment Repository
          uses: actions/checkout@v4
          with:
            repository: parkyoungjin-888/k8s-deployment
            path: k8s-deployment
            ref: main
            token: ${{ secrets.MY_GITHUB_TOKEN }}

        - name: Update values.yaml and push
          run: |
            if [[ -z "$IMAGE_LIST" ]]; then
              echo "No images, Skipping this step."
              exit 0
            fi

            cd k8s-deployment

            for IMAGE_NAME in $IMAGE_LIST; do
              IMAGE_NAME_NO_TAG=$(echo "$IMAGE_NAME" | cut -d ':' -f1)
  
              for EDIT_FILE in ./manifests/*/values.yaml; do
                sed -i "s|image: *$IMAGE_NAME_NO_TAG:.*|image: $IMAGE_NAME|" "$EDIT_FILE"
                git add "$EDIT_FILE"
              done
            done

            if git diff --cached --quiet; then
              echo "No changes to commit."
            else
              git config --global user.name "parkyoungjin-888"
              git config --global user.email "pyj8813@gmail.com"
              git commit -m "Update image to $IMAGE_LIST"
              git push
            fi
